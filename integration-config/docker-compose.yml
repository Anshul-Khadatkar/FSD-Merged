version: "3.8"

services:
  # PostgreSQL Database for Registration Service
  registration-db:
    image: postgres:15
    container_name: registration-db
    environment:
      POSTGRES_DB: registrationdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5433:5432"
    volumes:
      - registration_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  # PostgreSQL Database for Participation Service
  participation-db:
    image: postgres:15
    container_name: participation-db
    environment:
      POSTGRES_DB: participationdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - participation_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  # Registration Service
  registration-service:
    build: ../1_Registration/fsd
    container_name: registration-service
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=registration-db
      - DB_PORT=5432
      - DB_NAME=registrationdb
      - DB_USER=postgres
      - DB_PASSWORD=root
      - PARTICIPATION_SERVICE_URL=http://participation-service:8080
    depends_on:
      - registration-db
    networks:
      - microservices-network

  # Participation Service
  participation-service:
    build: ../2_Participation/backend
    container_name: participation-service
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=participation-db
      - DB_PORT=5432
      - DB_NAME=participationdb
      - DB_USER=postgres
      - DB_PASSWORD=root
      - REGISTRATION_SERVICE_URL=http://registration-service:8080
    depends_on:
      - participation-db
    networks:
      - microservices-network

  # Registration Frontend
  registration-frontend:
    build: ../1_Registration/fsd-frontend
    container_name: registration-frontend
    ports:
      - "4200:80"
    environment:
      - REGISTRATION_API_URL=http://localhost:8081
      - PARTICIPATION_API_URL=http://localhost:8082
    networks:
      - microservices-network

  # Participation Frontend
  participation-frontend:
    build: ../2_Participation/frontend
    container_name: participation-frontend
    ports:
      - "4201:80"
    environment:
      - PARTICIPATION_API_URL=http://localhost:8082
      - REGISTRATION_API_URL=http://localhost:8081
    networks:
      - microservices-network

  # Result Service
  result-service:
    build: ../3_Result/Backend
    container_name: result-service
    ports:
      - "5005:5005"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=participation-db
      - DB_PORT=5432
      - DB_NAME=participationdb
      - DB_USER=postgres
      - DB_PASSWORD=root
    depends_on:
      - participation-db
    networks:
      - microservices-network

  # Result Frontend
  result-frontend:
    build: ../3_Result/Frontend
    container_name: result-frontend
    ports:
      - "4202:80"
    environment:
      - RESULT_API_URL=http://localhost:5005
    networks:
      - microservices-network

  # PostgreSQL Database for Venue Service
  venue-db:
    image: postgres:15
    container_name: venue-db
    environment:
      POSTGRES_DB: venuedb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5434:5432"
    volumes:
      - venue_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  # Venue Service
  venue-service:
    build: ../4_Venue/Venue_Backend
    container_name: venue-service
    ports:
      - "8084:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=venue-db
      - DB_PORT=5432
      - DB_NAME=venuedb
      - DB_USER=postgres
      - DB_PASSWORD=root
    depends_on:
      - venue-db
    networks:
      - microservices-network

  # Venue Frontend
  venue-frontend:
    build: ../4_Venue/Venue_Frontend
    container_name: venue-frontend
    ports:
      - "4203:80"
    environment:
      - VENUE_API_URL=http://localhost:8084
    networks:
      - microservices-network

  # PostgreSQL Database for Event Master Service
  event-master-db:
    image: postgres:15
    container_name: event-master-db
    environment:
      POSTGRES_DB: eventMasterDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5435:5432"
    volumes:
      - event_master_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  # Event Master Service
  event-master-service:
    build: ../5_Event_Master/EventMasterBackend
    container_name: event-master-service
    ports:
      - "8085:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=event-master-db
      - DB_PORT=5432
      - DB_NAME=eventMasterDB
      - DB_USER=postgres
      - DB_PASSWORD=root
      - VENUE_SERVICE_URL=http://venue-service:8080
    depends_on:
      - event-master-db
    networks:
      - microservices-network

  # Event Master Frontend
  event-master-frontend:
    build: ../5_Event_Master/EventMasterFrontend
    container_name: event-master-frontend
    ports:
      - "4204:80"
    environment:
      - EVENT_MASTER_API_URL=http://localhost:8085
      - VENUE_API_URL=http://localhost:8084
    networks:
      - microservices-network

volumes:
  registration_data:
  participation_data:
  venue_data:
  event_master_data:

networks:
  microservices-network:
    driver: bridge
